<?php


/**
 * Implementation of hook_menu().
 */
function careers_menu() {
  $items = array();

  // A page to demonstrate theming form elements in a table.
  $items['careers'] = array(
    'title' => 'Teacher\'s Job Vacancies',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('careers_form_table_form'),
    'access callback' => TRUE,
  );
  $items['teacher-evaluation-test'] = array(
    'title' => 'Teachers Evaluation Test',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('teachers_evaluation_test_form'),
    'access callback' => TRUE,
  );

  return $items;
}


/**
 * Implementation of hook_theme.
 */
function careers_theme() {
  return array(
    'careers_form_table' => array(
      // The renderable element is the form.
      'render element' => 'form',
    ),
  );
}


/**
 * Page Callback / Form Builder for the table form.
 */

function careers_form_table_form($form = array(), &$form_state){
	
	$query = db_select('node','n');
	$query->condition('n.type','careers');
	$query->condition('n.status','1');
	$query->fields('n', array('nid'));
	$nid_array = $query->execute()->fetchCol();
	
	$careers_node_load = node_load_multiple($nid_array);
	
	
	
	
	
	
	foreach($careers_node_load as $nid){
		$city_names[] = $nid->field_city['und'][0]['value'];
		$state_names[] = $nid->field_state_career['und'][0]['value'];
		$country_names[] = $nid->field_country['und'][0]['value'];
		$term_category_array[] = $nid->field_career_category['und'][0]['tid'];
		$category = taxonomy_term_load_multiple($term_category_array);
		$category_names_arr[] = $category[$nid->field_career_category['und'][0]['tid']]->name;
		
	   
	}
	
	for($i=0;$i<count($nid_array);$i++){
		$checkboxes['r'.$i] = array("$category_names_arr[$i]" => array('#type' => 'checkbox'),
		'c2' => array('#markup'
         => check_plain($category_names_arr[$i])),
        //'c3' => array('#markup'=>'<a href ="node/'.$nid_array[$i].'">View More</a>')
        );
    
	}
      $form['contact_information'] = array(

       '#markup' => '<p><h3>Apply For Job Vacancies</h3>
        We’re glad that you’ve decided to explore teaching with us. DoLessons is a supplementary learning marketplace for personalized 1-on-1 lessons. We have unwavering passion for education, a commitment to results and an overriding dedication to our students, which consistently define our energy-packed prep sessions.</p>',

       );
	  // Add a submit button for fun.
      $form['submit'] = array(
     '#type' => 'submit',
     '#value' => t('Apply'),
     );
	//$rows[] = array('data' => array());
      $form['table'] = array(
    // Theme this part of the form as a table.
    '#theme' => 'careers_form_table',
    // Pass header information to the theme function.
    '#header' => array(t(''), t('Vaccencies')),
    // Rows in the form table.
    'rows' => $checkboxes,
    array(
      // Make it a tree for easier traversing of the entered values on submission.
      '#tree' => TRUE,
      // First row.
      
    ),
  );
  

  return $form;
	
}

function careers_form_table_form_submit($form, &$form_state) {
         
      //drupal_set_message('<pre>' . print_r($form_state['values'], true) . '</pre>');
      $form_values = $form_state['values'];
      unset($form_values['submit']);
      unset($form_values['form_build_id']);
      unset($form_values['form_token']);
      unset($form_values['form_id']);
      unset($form_values['op']);
      //drupal_set_message('<pre>' . print_r($form_values, true) . '</pre>');
      
      $_SESSION['apply'] = $form_values;
      
      global $user;
  // Check to see if $user has the teacher user role.
  //if (in_array('teacher', array_values($user->roles))) {
      
    drupal_goto('node/add/teacher-application-form');
  //}

        } 

function theme_careers_form_table(&$variables) {
	
	
	
	
  // Get the userful values.
  $form = $variables['form'];
  $rows = $form['rows'];
  $header = $form['#header'];

  // Setup the structure to be rendered and returned.
  $content = array(
    '#theme' => 'table',
    '#header' => $header,
    '#rows' => array(),
  );

  // Traverse each row.  @see element_chidren().
  foreach (element_children($rows) as $row_index) {
    $row = array();
    // Traverse each column in the row.  @see element_children().
    foreach (element_children($rows[$row_index]) as $col_index) {
      // Render the column form element.
      $row[] = drupal_render($rows[$row_index][$col_index]);
    }
    // Add the row to the table.
    $content['#rows'][] = $row;
  }

  // Redner the table and return.
  return drupal_render($content);


}

function careers_form_alter(&$form, $form_state, $form_id)  {
  	switch ($form_id)  {
  	 	case 'careers_form_table_form':
  	 		//echo'<pre>';
                        //print_r($form);
  	 		break;
  	 }
  }

  
  function teachers_evaluation_test_form($form = array(), &$form_state){
        $get_apply = array();
        var_dump(array_key_exists('apply', $_SESSION));
      if (array_key_exists('apply', $_SESSION)){
		  
      $get_apply =  $_SESSION['apply'];
      //echo'<pre>';
      //print_r($get_apply);
      
      
      $form['test_info'] = array(

       '#markup' => '<p><h3>Welcome DoLessoner!</h3>
DoLessons is super excited to have you join our league of extraordinary smart pro teachers, poised to change the face of teaching and learning. You would have to take a pre-qualification Test to ascertain your firm grip of expertise in your subject areas. To pass, you will need to score 60%, otherwise you may retake the Test for the last time. If you still don’t make the 60 percentile, we may work with you in the future. It is fun, enjoy your Test!
</p>',

       );
      
      
      $active = array();
         foreach($get_apply as $subjects => $value){
         if($value == 1){
             $active[$subjects] = $subjects;
             
         }
         }//echo'<pre>';
          //print_r($active);
         

   $form['subject'] = array(
    '#type' => 'radios',
    '#title' => t(''),
    '#options' => $active,
    );
   
   $form['submit'] = array(
     '#type' => 'submit',
     '#value' => t('Start a Test'),
     );
      }
      
      else{
          
          $form['test_infos'] = array(

       '#markup' => '<p><h3>Welcome DoLessoner!</h3></p><p>You have not applied for any position. <a href="careers">click here</a> to return on career page.</p>',

       );
      }
      return $form;
  }

  
  function teachers_evaluation_test_form_submit ($form, &$form_state){
      
      //echo '<pre>';
      //print_r($form_state['values']);
      $subject = $form_state['values']['subject'];
      
      
     switch($subject){
          case 'Biology':
              drupal_goto('biology-info');
          case 'Mathmatics':    
              drupal_goto('mathmatics-info');
          case 'English Language':    
              drupal_goto('english-language-info');
          case 'Further Mathmatics':    
              drupal_goto('further-mathmatics-info');
          case 'French':    
              drupal_goto('french-info');
          case 'Information Technology':    
              drupal_goto('information-technology-info');
          case 'Technical Drawing':    
              drupal_goto('technical-drawing-info');
          case 'Chemistry':    
              drupal_goto('chemistry-info');
          case 'Physics':    
              drupal_goto('physics-info');
          case 'Agricultural Science':    
              drupal_goto('agricultural-science-info');
          case 'Literature in English':    
              drupal_goto('literature-in-english-info');
          case 'Civic Education':    
              drupal_goto('civic-education-info');
          case 'Economics':    
              drupal_goto('economics-info');
          case 'Commerce':    
              drupal_goto('commerce-info');
          case 'Financial Account':    
              drupal_goto('financial-account-info');
          case 'SAT Instructor':    
              drupal_goto('SAT-Instructor-info');
          case 'TOEFL Instructors':    
              drupal_goto('biology-info');
          case 'IGSC Instructors':    
              drupal_goto('IGSC-Instructors-info');
          case 'IT Support Specialist':    
              drupal_goto('it-support-specialist-info');
          case 'Secretory':    
              drupal_goto('secretory-info');
          case 'Geography':    
              drupal_goto('geography-info');
              
      }
      
      
  }

